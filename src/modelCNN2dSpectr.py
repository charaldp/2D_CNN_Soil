# Tensorflow 2.X.X
# import tensorflow
# from tensorflow import keras
# from tensorflow.keras.layers import *
# from tensorflow.keras.activations import *
# from tensorflow.keras.models import Sequential,Model,load_model
# from tensorflow.keras.optimizers import Adam,Adamax
# from tensorflow.keras.callbacks import Callback
# Tensorflow 1.X.X
import keras
from keras.layers import *
from keras.activations import *
from keras.models import Sequential,Model,Input,load_model
from keras.optimizers import Adam,Adamax
from keras.callbacks import Callback

import sys,math,random,os,argparse, scipy;
import numpy as np
from scipy import signal
import matplotlib.pyplot as plt
import matplotlib as mpl
import pandas as pnd
from time import time



class TimingCallback(Callback):
	def __init__(self):
		Callback.__init__(self)
		self.logs=[]

	def on_epoch_begin(self, epoch, logs={}):
 		self.starttime=time()

	def on_epoch_end(self, epoch, logs={}):
		self.logs.append(time()-self.starttime)


def lucas_soil_properties():
	return {
	 	'min' : {
	 		'OC':  0,
	 		'CEC': 0,
	 		'clay': 0,
	 		'sand': 1,
	 		'pH.in.H20': 3.21,
	 		'N': 0
	 	},
	 	'max' : {
	 		'OC':  586.8,
	 		'CEC': 234,
	 		'clay': 79,
	 		'sand': 99,
	 		'pH.in.H20': 10.08,
	 		'N': 38.6
	 	},
	 	'mean' : {
	 		'OC': 50.00,
			'CEC': 15.76,
			'clay': 18.88,
			'sand': 42.88,
			'pH.in.H20': 6.20,
			'N': 2.92
	 	},
	 	'median': {
		 	'OC': 20.80,
			'CEC': 12.40,
			'clay': 17.00,
			'sand': 42.00,
			'pH.in.H20': 6.21,
			'N': 1.70
	 	},
	 	'st.dev.': {
	 		'OC': 91.31,
			'CEC': 14.48,
			'clay': 13.00,
			'sand': 26.11,
			'pH.in.H20': 1.35,
			'N': 3.76
	 	},
	 	'skewness': {
		 	'OC': 3.67,
			'CEC': 4.24,
			'clay': 0.91,
			'sand': 0.19,
			'pH.in.H20': 0.08,# Minus !!!!
			'N': 3.76
	 	}
 	}

def computeErrors(valy, pred, stand=False):
    # Compute RMSE
    sumSquaresRes = 0
    for i in range(len(pred)):
        #piirint("X=%s, Predicted=%s" % (valy[i], pred[i]))
        sumSquaresRes = sumSquaresRes + pow(valy[i] - pred[i], 2)

    rmse = math.sqrt(sumSquaresRes / float(len(pred)))

    if stand:
        return rmse

    # Compute R^2
    meanY = sum(valy) / float(len(valy))
    totSumSquares = 0
    for i in range(len(pred)):
        totSumSquares = totSumSquares + pow(valy[i] - meanY, 2)

    determ = 1 - (sumSquaresRes / float(totSumSquares))

    # Compute RPIQ
    iqr = np.percentile(valy, 75) - np.percentile(valy, 25)
    rpiq = iqr / float(rmse)

    return rmse, determ, rpiq


def getInputShape(spectra, v_to_h_ratio):
	mi = int(v_to_h_ratio * 100)
	nover = int(v_to_h_ratio * 50)
	window = signal.hann(M = mi)
	[x, t, spec] = signal.spectrogram(x = np.array(spectra), fs = 1,window = window, nperseg = mi, noverlap = nover)
	return spec.shape

def spectraToSpectrogram(x_in_spectra, mode, v_to_h_ratio, input_shape):
	if mode=='minus_1_1':
		num = 25
	elif mode=='one_zero':
		num = 50
	mi = int(v_to_h_ratio * 100)
	nover = int(v_to_h_ratio * 50)
	window = signal.hann(M = mi)
	x_in_spectra = np.array(x_in_spectra)
	x_spectrogram = np.empty(shape=(x_in_spectra.shape[0],input_shape[0],input_shape[1],1))
	for i in range(x_in_spectra.shape[0]):
		[x, t, spec] = signal.spectrogram(x = x_in_spectra[i], fs = 1,window = window, nperseg = mi, noverlap = nover)
		x_spectrogram[i] = (np.log(np.abs(spec.reshape(input_shape[0],input_shape[1], 1))) + num) / num
	return x_spectrogram

def extractSpectrogram(x_in_spectra, path, input_shape):
	window = signal.hann(M = 100)
	x_in_spectra = np.array(x_in_spectra)
	x_spectrogram = np.empty(shape=(x_in_spectra.shape[0],51,83,1))
	i = 0
	while i < x_in_spectra.shape[0]:
		[x, t, spec] = signal.spectrogram(x = x_in_spectra[i], fs = 1,window = window, nperseg = 100, noverlap = 50)
		plt.pcolormesh(t, x, spec)
		plt.title('Spectrogtam Magnitude')
		plt.ylabel('Frequency')
		plt.xlabel('Wavelength')
		plt.savefig(path+'Spectrogram'+str(i))
		plt.close()
		i += 15

def outputAtNormalRange(y, prop, mode):
	props = lucas_soil_properties()
	if mode == 'linear_minus_1_1':
		y_norm = 2 * (y - props['min'][prop]) / (props['max'][prop] - props['min'][prop]) - 1
	elif mode == 'statistic_minus_1_1':
		y_norm = (y - props['mean'][prop]) / (props['st.dev.'][prop])
	elif mode == 'linear_zero_one':
		y_norm = outputAtNormalRange(y, prop, 'linear_minus_1_1') / 2 + 0.5
	elif mode == 'statistic_zero_one':
		y_norm = outputAtNormalRange(y, prop, 'statistic_minus_1_1') / 2 + 0.5
	return y_norm

def outputFromNormalRange(y_norm, prop, mode):
	props = lucas_soil_properties()
	if mode == 'linear_minus_1_1':
		y = (y_norm + 1) * (props['max'][prop] - props['min'][prop]) / 2 + props['min'][prop]
	elif mode == 'statistic_minus_1_1':
		y = y_norm * props['st.dev.'][prop] + props['mean'][prop]
	elif mode == 'linear_zero_one':
		y = outputFromNormalRange((y_norm - 0.5) * 2, prop, 'linear_minus_1_1')
	elif mode == 'statistic_zero_one':
		y = outputFromNormalRange((y_norm - 0.5) * 2, prop, 'statistic_minus_1_1')
	return y

def customModel( fold_path, prop, x_in_train, y_train, x_in_val, y_val, x_in_test, y_test, v_to_h_ratio, epochs ):
	# examples
	# sig = np.array([0.8485075, 0.8305435, 0.8111145, 0.7911465, 0.771278, 0.7514895, 0.7318965, 0.7132245, 0.6964255, 0.6820615, 0.6694205, 0.6572085, 0.6448775, 0.6324175, 0.619829, 0.607176, 0.594449, 0.5817265, 0.5690665, 0.556516, 0.5441905, 0.532344, 0.5211715, 0.510746, 0.5012075, 0.4924195, 0.484395, 0.4773365, 0.4712655, 0.4657845, 0.460925, 0.456989, 0.453599, 0.4505275, 0.447719, 0.4452245, 0.4430335, 0.440989, 0.438935, 0.436865, 0.4347855, 0.432636, 0.4303165, 0.4278575, 0.4254725, 0.423303, 0.421356, 0.418908, 0.4161595, 0.4135565, 0.411108, 0.4087575, 0.4064495, 0.4041695, 0.4019135, 0.3997085, 0.397574, 0.3956365, 0.393632, 0.391606, 0.390155, 0.3882255, 0.386928, 0.3846515, 0.3833, 0.3824415, 0.3812305, 0.379433, 0.377684, 0.37616, 0.37476, 0.373362, 0.372027, 0.370769, 0.369596, 0.36845, 0.367319, 0.3662905, 0.3654925, 0.3650185, 0.3646835, 0.364473, 0.3644315, 0.3646575, 0.364988, 0.364876, 0.364666, 0.3671875, 0.3732585, 0.387794, 0.4092835, 0.4295605, 0.427887, 0.415513, 0.4072605, 0.4024985, 0.400385, 0.397271, 0.3924035, 0.387622, 0.3833815, 0.379686, 0.376497, 0.3738025, 0.37154, 0.369566, 0.367858, 0.366302, 0.364806, 0.3633965, 0.362046, 0.360856, 0.359756, 0.35879, 0.3579205, 0.357241, 0.3566355, 0.3562355, 0.3561795, 0.3560545, 0.3559995, 0.356414, 0.35714, 0.3579315, 0.3583, 0.3591455, 0.360191, 0.360945, 0.3615095, 0.3618295, 0.3616085, 0.361041, 0.3601855, 0.3598165, 0.3603275, 0.3628805, 0.367605, 0.37754, 0.403819, 0.451898, 0.521133, 0.5580245, 0.5475945, 0.5318235, 0.5196795, 0.5096015, 0.499838, 0.4897885, 0.4790335, 0.4679175, 0.457134, 0.447401, 0.43918, 0.4326225, 0.4276125, 0.423608, 0.420089, 0.4169495, 0.4144955, 0.4128725, 0.4116175, 0.410378, 0.4086275, 0.4071945, 0.4075665, 0.4103635, 0.4146465, 0.4198195, 0.4266315, 0.4375615, 0.4525525, 0.4634185, 0.4496405, 0.439537, 0.436565, 0.434534, 0.432961, 0.433877, 0.4388175, 0.4450415, 0.450283, 0.454885, 0.4589205, 0.4653055, 0.4742115, 0.4833225, 0.4891085, 0.4941495, 0.5006855, 0.5066255, 0.5116475, 0.518272, 0.5268075, 0.5370325, 0.547965, 0.557712, 0.566464, 0.574841, 0.5829305, 0.5904995])
	# sig = np.array([0.19678, 0.1928, 0.18892, 0.18515, 0.18149, 0.17796, 0.17455, 0.17127, 0.16812, 0.16511, 0.16224, 0.15951, 0.15692, 0.15447, 0.15216, 0.14998, 0.14794, 0.14602, 0.14424, 0.14257, 0.14101, 0.13957, 0.13823, 0.137, 0.13586, 0.1348, 0.13384, 0.13295, 0.13214, 0.1314, 0.13072, 0.13011, 0.12955, 0.12905, 0.1286, 0.12819, 0.12782, 0.12749, 0.12719, 0.12693, 0.12669, 0.12648, 0.12629, 0.12613, 0.12598, 0.12584, 0.12572, 0.12561, 0.12551, 0.12542, 0.12535, 0.12527, 0.1252, 0.12514, 0.12508, 0.12503, 0.12497, 0.12492, 0.12488, 0.12483, 0.12479, 0.12475, 0.12471, 0.12468, 0.12465, 0.12462, 0.1246, 0.12458, 0.12457, 0.12456, 0.12456, 0.12456, 0.12457, 0.12458, 0.1246, 0.12462, 0.12465, 0.12468, 0.12472, 0.12476, 0.12481, 0.12485, 0.12491, 0.12496, 0.12502, 0.12508, 0.12515, 0.12522, 0.12529, 0.12536, 0.12543, 0.1255, 0.12558, 0.12565, 0.12573, 0.12581, 0.12589, 0.12597, 0.12604, 0.12611, 0.12619, 0.12626, 0.12633, 0.1264, 0.12647, 0.12654, 0.1266, 0.12667, 0.12673, 0.1268, 0.12686, 0.12692, 0.12698, 0.12705, 0.12711, 0.12717, 0.12723, 0.1273, 0.12736, 0.12742, 0.12748, 0.12755, 0.12761, 0.12767, 0.12773, 0.1278, 0.12786, 0.12792, 0.12798, 0.12805, 0.12811, 0.12817, 0.12824, 0.1283, 0.12837, 0.12844, 0.12852, 0.12859, 0.12867, 0.12874, 0.12882, 0.1289, 0.12899, 0.12907, 0.12916, 0.12925, 0.12934, 0.12944, 0.12954, 0.12965, 0.12976, 0.12987, 0.12999, 0.13011, 0.13023, 0.13036, 0.1305, 0.13064, 0.13078, 0.13093, 0.13108, 0.13123, 0.13139, 0.13155, 0.13172, 0.1319, 0.13208, 0.13226, 0.13245, 0.13265, 0.13285, 0.13305, 0.13326, 0.13348, 0.1337, 0.13392, 0.13416, 0.13439, 0.13464, 0.13488, 0.13514, 0.13539, 0.13566, 0.13593, 0.1362, 0.13648, 0.13677, 0.13706, 0.13735, 0.13765, 0.13796, 0.13827, 0.13859, 0.13891, 0.13923, 0.13956, 0.13989, 0.14023, 0.14058, 0.14092, 0.14128, 0.14163, 0.14199, 0.14236, 0.14273, 0.1431, 0.14347, 0.14385, 0.14424, 0.14463, 0.14502, 0.14542, 0.14582, 0.14622, 0.14662, 0.14703, 0.14744, 0.14786, 0.14828, 0.14869, 0.14911, 0.14954, 0.14996, 0.15039, 0.15082, 0.15125, 0.15169, 0.15212, 0.15256, 0.153, 0.15344, 0.15389, 0.15433, 0.15478, 0.15523, 0.15568, 0.15614, 0.15659, 0.15705, 0.1575, 0.15796, 0.15842, 0.15888, 0.15934, 0.1598, 0.16026, 0.16073, 0.16119, 0.16165, 0.16211, 0.16258, 0.16304, 0.1635, 0.16397, 0.16443, 0.16489, 0.16535, 0.16582, 0.16628, 0.16674, 0.1672, 0.16767, 0.16813, 0.16859, 0.16905, 0.16951, 0.16996, 0.17042, 0.17088, 0.17134, 0.17179, 0.17224, 0.1727, 0.17315, 0.1736, 0.17405, 0.1745, 0.17495, 0.1754, 0.17585, 0.17629, 0.17674, 0.17718, 0.17762, 0.17807, 0.17851, 0.17895, 0.17939, 0.17983, 0.18027, 0.18071, 0.18115, 0.18159, 0.18202, 0.18246, 0.18289, 0.18333, 0.18376, 0.1842, 0.18463, 0.18506, 0.18549, 0.18592, 0.18634, 0.18677, 0.18719, 0.18762, 0.18804, 0.18846, 0.18888, 0.1893, 0.18972, 0.19014, 0.19055, 0.19096, 0.19138, 0.19179, 0.1922, 0.19261, 0.19302, 0.19342, 0.19383, 0.19424, 0.19464, 0.19504, 0.19544, 0.19584, 0.19624, 0.19663, 0.19703, 0.19742, 0.19781, 0.1982, 0.19859, 0.19898, 0.19937, 0.19975, 0.20013, 0.20051, 0.20089, 0.20127, 0.20165, 0.20202, 0.2024, 0.20277, 0.20315, 0.20352, 0.20389, 0.20425, 0.20462, 0.20499, 0.20535, 0.20571, 0.20607, 0.20643, 0.20678, 0.20714, 0.2075, 0.20785, 0.2082, 0.20855, 0.2089, 0.20924, 0.20959, 0.20993, 0.21027, 0.21061, 0.21095, 0.21128, 0.21162, 0.21195, 0.21228, 0.2126, 0.21293, 0.21325, 0.21358, 0.2139, 0.21422, 0.21455, 0.21487, 0.21519, 0.21551, 0.21583, 0.21615, 0.21647, 0.21679, 0.21711, 0.21742, 0.21773, 0.21804, 0.21835, 0.21866, 0.21897, 0.21927, 0.21958, 0.21988, 0.22019, 0.22049, 0.2208, 0.2211, 0.22141, 0.22172, 0.22202, 0.22233, 0.22264, 0.22295, 0.22326, 0.22356, 0.22387, 0.22418, 0.22449, 0.2248, 0.22511, 0.22541, 0.22572, 0.22603, 0.22635, 0.22666, 0.22697, 0.22728, 0.22759, 0.22791, 0.22822, 0.22854, 0.22886, 0.22917, 0.22949, 0.22981, 0.23014, 0.23046, 0.23078, 0.23111, 0.23143, 0.23176, 0.23208, 0.23241, 0.23274, 0.23306, 0.23339, 0.23372, 0.23404, 0.23437, 0.2347, 0.23503, 0.23536, 0.23569, 0.23603, 0.23636, 0.2367, 0.23703, 0.23737, 0.23771, 0.23805, 0.23839, 0.23873, 0.23906, 0.2394, 0.23975, 0.24009, 0.24043, 0.24077, 0.24112, 0.24147, 0.24181, 0.24216, 0.24251, 0.24285, 0.2432, 0.24355, 0.2439, 0.24425, 0.2446, 0.24496, 0.24531, 0.24566, 0.24602, 0.24637, 0.24673, 0.24708, 0.24744, 0.2478, 0.24815, 0.24851, 0.24887, 0.24923, 0.24959, 0.24995, 0.25032, 0.25068, 0.25104, 0.25141, 0.25177, 0.25214, 0.2525, 0.25286, 0.25323, 0.2536, 0.25396, 0.25432, 0.25469, 0.25505, 0.25542, 0.25578, 0.25615, 0.25651, 0.25687, 0.25723, 0.2576, 0.25796, 0.25832, 0.25868, 0.25904, 0.25941, 0.25977, 0.26013, 0.26049, 0.26084, 0.2612, 0.26156, 0.26192, 0.26228, 0.26264, 0.263, 0.26335, 0.26371, 0.26406, 0.26442, 0.26477, 0.26512, 0.26547, 0.26582, 0.26617, 0.26652, 0.26687, 0.26721, 0.26756, 0.26791, 0.26825, 0.26859, 0.26894, 0.26928, 0.26962, 0.26996, 0.2703, 0.27064, 0.27097, 0.27131, 0.27165, 0.27199, 0.27233, 0.27266, 0.273, 0.27333, 0.27367, 0.274, 0.27433, 0.27466, 0.275, 0.27533, 0.27566, 0.27598, 0.27631, 0.27664, 0.27696, 0.27729, 0.27761, 0.27794, 0.27826, 0.27858, 0.2789, 0.27922, 0.27954, 0.27986, 0.28018, 0.2805, 0.28082, 0.28113, 0.28145, 0.28177, 0.28208, 0.28239, 0.28271, 0.28302, 0.28333, 0.28365, 0.28396, 0.28427, 0.28459, 0.2849, 0.28521, 0.28552, 0.28583, 0.28614, 0.28645, 0.28677, 0.28708, 0.28739, 0.2877, 0.28801, 0.28832, 0.28863, 0.28894, 0.28925, 0.28956, 0.28987, 0.29018, 0.29049, 0.29079, 0.2911, 0.2914, 0.29171, 0.29202, 0.29232, 0.29263, 0.29294, 0.29324, 0.29355, 0.29385, 0.29416, 0.29446, 0.29477, 0.29507, 0.29537, 0.29567, 0.29597, 0.29628, 0.29658, 0.29689, 0.29719, 0.2975, 0.2978, 0.2981, 0.2984, 0.2987, 0.299, 0.2993, 0.2996, 0.2999, 0.3002, 0.30051, 0.30081, 0.30111, 0.30141, 0.30171, 0.30201, 0.30231, 0.3026, 0.3029, 0.3032, 0.3035, 0.30379, 0.30409, 0.30439, 0.30469, 0.30498, 0.30528, 0.30558, 0.30587, 0.30617, 0.30646, 0.30676, 0.30705, 0.30735, 0.30764, 0.30793, 0.30822, 0.30852, 0.30881, 0.3091, 0.30939, 0.30969, 0.30998, 0.31027, 0.31056, 0.31085, 0.31114, 0.31143, 0.31172, 0.31201, 0.3123, 0.31259, 0.31288, 0.31317, 0.31346, 0.31375, 0.31404, 0.31433, 0.31462, 0.3149, 0.31519, 0.31548, 0.31576, 0.31605, 0.31633, 0.31662, 0.3169, 0.31719, 0.31747, 0.31775, 0.31804, 0.31832, 0.3186, 0.31888, 0.31916, 0.31944, 0.31972, 0.32001, 0.32029, 0.32057, 0.32084, 0.32112, 0.32139, 0.32167, 0.32194, 0.32221, 0.32249, 0.32276, 0.32303, 0.3233, 0.32356, 0.32383, 0.3241, 0.32436, 0.32463, 0.32489, 0.32515, 0.32541, 0.32567, 0.32593, 0.32619, 0.32644, 0.3267, 0.32695, 0.3272, 0.32745, 0.3277, 0.32795, 0.32819, 0.32844, 0.32868, 0.32893, 0.32917, 0.32941, 0.32965, 0.32989, 0.33012, 0.33036, 0.3306, 0.33083, 0.33107, 0.3313, 0.33154, 0.33177, 0.332, 0.33223, 0.33246, 0.33269, 0.33292, 0.33314, 0.33337, 0.33359, 0.33381, 0.33403, 0.33425, 0.33447, 0.33469, 0.33491, 0.33512, 0.33534, 0.33555, 0.33576, 0.33597, 0.33618, 0.33639, 0.3366, 0.33681, 0.33702, 0.33723, 0.33743, 0.33764, 0.33784, 0.33804, 0.33824, 0.33844, 0.33863, 0.33882, 0.33901, 0.3392, 0.33939, 0.33957, 0.33975, 0.33993, 0.3401, 0.34027, 0.34045, 0.34062, 0.34079, 0.34095, 0.34112, 0.34128, 0.34145, 0.34161, 0.34176, 0.34192, 0.34208, 0.34223, 0.34239, 0.34254, 0.34269, 0.34284, 0.34299, 0.34314, 0.34329, 0.34343, 0.34358, 0.34372, 0.34387, 0.34401, 0.34415, 0.34429, 0.34443, 0.34457, 0.34471, 0.34485, 0.34498, 0.34512, 0.34526, 0.34539, 0.34553, 0.34567, 0.3458, 0.34594, 0.34608, 0.34622, 0.34636, 0.3465, 0.34664, 0.34678, 0.34692, 0.34706, 0.3472, 0.34735, 0.34749, 0.34764, 0.34778, 0.34793, 0.34807, 0.34822, 0.34837, 0.34853, 0.34868, 0.34883, 0.34898, 0.34913, 0.34929, 0.34945, 0.3496, 0.34976, 0.34992, 0.35007, 0.35023, 0.35039, 0.35055, 0.35071, 0.35086, 0.35102, 0.35118, 0.35133, 0.35149, 0.35164, 0.35179, 0.35195, 0.3521, 0.35226, 0.35241, 0.35256, 0.35271, 0.35286, 0.353, 0.35315, 0.35329, 0.35343, 0.35357, 0.3537, 0.35384, 0.35397, 0.3541, 0.35423, 0.35436, 0.35448, 0.35461, 0.35473, 0.35485, 0.35496, 0.35508, 0.35519, 0.35531, 0.35542, 0.35553, 0.35564, 0.35574, 0.35584, 0.35595, 0.35605, 0.35615, 0.35625, 0.35634, 0.35644, 0.35653, 0.35662, 0.35671, 0.3568, 0.35689, 0.35697, 0.35706, 0.35714, 0.35722, 0.3573, 0.35739, 0.35747, 0.35754, 0.35762, 0.3577, 0.35777, 0.35785, 0.35793, 0.358, 0.35808, 0.35815, 0.35823, 0.3583, 0.35837, 0.35843, 0.3585, 0.35858, 0.35865, 0.35872, 0.3588, 0.35887, 0.35894, 0.35901, 0.35908, 0.35914, 0.35921, 0.35928, 0.35935, 0.35942, 0.35949, 0.35956, 0.35963, 0.3597, 0.35977, 0.35984, 0.35992, 0.35999, 0.36006, 0.36013, 0.3602, 0.36027, 0.36035, 0.36042, 0.36049, 0.36056, 0.36063, 0.36071, 0.36078, 0.36085, 0.36093, 0.361, 0.36107, 0.36115, 0.36122, 0.3613, 0.36137, 0.36145, 0.36152, 0.3616, 0.36168, 0.36175, 0.36183, 0.36191, 0.36199, 0.36207, 0.36215, 0.36223, 0.36231, 0.36239, 0.36247, 0.36255, 0.36263, 0.36272, 0.3628, 0.36288, 0.36296, 0.36305, 0.36313, 0.36322, 0.3633, 0.36339, 0.36347, 0.36356, 0.36365, 0.36373, 0.36382, 0.3639, 0.36399, 0.36408, 0.36416, 0.36425, 0.36434, 0.36442, 0.36451, 0.36459, 0.36468, 0.36477, 0.36485, 0.36494, 0.36502, 0.36511, 0.3652, 0.36528, 0.36537, 0.36546, 0.36555, 0.36563, 0.36572, 0.36581, 0.3659, 0.36599, 0.36607, 0.36616, 0.36625, 0.36634, 0.36643, 0.36653, 0.36662, 0.36671, 0.3668, 0.36689, 0.36698, 0.36708, 0.36717, 0.36727, 0.36736, 0.36746, 0.36755, 0.36765, 0.36774, 0.36784, 0.36794, 0.36804, 0.36814, 0.36824, 0.36833, 0.36843, 0.36853, 0.36863, 0.36873, 0.36883, 0.36893, 0.36903, 0.36913, 0.36923, 0.36933, 0.36943, 0.36953, 0.36963, 0.36973, 0.36983, 0.36992, 0.37002, 0.37012, 0.37022, 0.37032, 0.37041, 0.37051, 0.37061, 0.37071, 0.3708, 0.3709, 0.371, 0.3711, 0.3712, 0.3713, 0.3714, 0.3715, 0.3716, 0.3717, 0.3718, 0.3719, 0.372, 0.37211, 0.37221, 0.37231, 0.37241, 0.37251, 0.37261, 0.37271, 0.37281, 0.37291, 0.37301, 0.37311, 0.37321, 0.37331, 0.37341, 0.37351, 0.37361, 0.37371, 0.37381, 0.37391, 0.374, 0.3741, 0.3742, 0.3743, 0.3744, 0.3745, 0.3746, 0.3747, 0.37481, 0.37491, 0.37501, 0.37511, 0.37521, 0.37532, 0.37542, 0.37553, 0.37564, 0.37574, 0.37585, 0.37596, 0.37607, 0.37618, 0.37629, 0.3764, 0.37651, 0.37662, 0.37674, 0.37685, 0.37697, 0.37708, 0.3772, 0.37732, 0.37743, 0.37755, 0.37766, 0.37778, 0.37789, 0.37801, 0.37812, 0.37824, 0.37836, 0.37847, 0.37859, 0.3787, 0.37882, 0.37893, 0.37905, 0.37916, 0.37927, 0.37939, 0.3795, 0.37961, 0.37972, 0.37984, 0.37995, 0.38006, 0.38018, 0.38029, 0.3804, 0.38052, 0.38063, 0.38075, 0.38086, 0.38097, 0.38109, 0.3812, 0.38132, 0.38143, 0.38155, 0.38166, 0.38178, 0.38189, 0.38201, 0.38213, 0.38224, 0.38236, 0.38247, 0.38259, 0.3827, 0.38282, 0.38294, 0.38305, 0.38317, 0.38329, 0.3834, 0.38352, 0.38363, 0.38375, 0.38386, 0.38398, 0.38409, 0.38421, 0.38432, 0.38444, 0.38455, 0.38467, 0.38478, 0.3849, 0.38501, 0.38513, 0.38525, 0.38536, 0.38548, 0.38559, 0.38571, 0.38582, 0.38594, 0.38606, 0.38617, 0.38629, 0.38641, 0.38652, 0.38664, 0.38676, 0.38688, 0.38699, 0.38711, 0.38723, 0.38734, 0.38746, 0.38758, 0.3877, 0.38782, 0.38794, 0.38806, 0.38818, 0.3883, 0.38842, 0.38854, 0.38865, 0.38877, 0.38889, 0.38901, 0.38913, 0.38925, 0.38937, 0.38949, 0.38961, 0.38972, 0.38984, 0.38996, 0.39008, 0.3902, 0.39031, 0.39043, 0.39055, 0.39067, 0.39079, 0.3909, 0.39102, 0.39114, 0.39126, 0.39138, 0.3915, 0.39162, 0.39174, 0.39186, 0.39198, 0.3921, 0.39222, 0.39234, 0.39246, 0.39257, 0.39269, 0.39281, 0.39293, 0.39305, 0.39317, 0.39329, 0.39341, 0.39353, 0.39365, 0.39377, 0.39389, 0.39401, 0.39413, 0.39425, 0.39437, 0.39449, 0.39461, 0.39473, 0.39485, 0.39497, 0.3951, 0.39522, 0.39534, 0.39546, 0.39558, 0.3957, 0.39582, 0.39594, 0.39606, 0.39617, 0.39629, 0.39641, 0.39653, 0.39665, 0.39677, 0.39689, 0.397, 0.39712, 0.39724, 0.39736, 0.39748, 0.3976, 0.39772, 0.39784, 0.39796, 0.39808, 0.39821, 0.39833, 0.39845, 0.39858, 0.3987, 0.39883, 0.39895, 0.39908, 0.39921, 0.39934, 0.39947, 0.39959, 0.39972, 0.39985, 0.39998, 0.4001, 0.40023, 0.40036, 0.40048, 0.40061, 0.40073, 0.40086, 0.40098, 0.40111, 0.40123, 0.40135, 0.40148, 0.4016, 0.40173, 0.40185, 0.40197, 0.4021, 0.40222, 0.40235, 0.40247, 0.40259, 0.40272, 0.40284, 0.40297, 0.40309, 0.40322, 0.40334, 0.40347, 0.40359, 0.40371, 0.40383, 0.40395, 0.40407, 0.4042, 0.40432, 0.40445, 0.40457, 0.40469, 0.40481, 0.40493, 0.40505, 0.40517, 0.40529, 0.40542, 0.40554, 0.40566, 0.40579, 0.40591, 0.40604, 0.40617, 0.4063, 0.40643, 0.40656, 0.4067, 0.40684, 0.40698, 0.40712, 0.40727, 0.40741, 0.40755, 0.40769, 0.40783, 0.40796, 0.40808, 0.4082, 0.40831, 0.40838, 0.40846, 0.40854, 0.40863, 0.40874, 0.40885, 0.40897, 0.4091, 0.40922, 0.40935, 0.40947, 0.40959, 0.40971, 0.40983, 0.40995, 0.41006, 0.41017, 0.41029, 0.4104, 0.41051, 0.41062, 0.41074, 0.41085, 0.41096, 0.41108, 0.4112, 0.41132, 0.41144, 0.41157, 0.41169, 0.41182, 0.41194, 0.41207, 0.4122, 0.41233, 0.41246, 0.41259, 0.41272, 0.41285, 0.41299, 0.41312, 0.41325, 0.41338, 0.41351, 0.41364, 0.41377, 0.4139, 0.41403, 0.41416, 0.41429, 0.41442, 0.41454, 0.41467, 0.4148, 0.41492, 0.41504, 0.41516, 0.41528, 0.4154, 0.41552, 0.41564, 0.41576, 0.41587, 0.41599, 0.4161, 0.41621, 0.41632, 0.41643, 0.41654, 0.41665, 0.41676, 0.41687, 0.41698, 0.41709, 0.4172, 0.4173, 0.41741, 0.41752, 0.41762, 0.41773, 0.41784, 0.41794, 0.41805, 0.41815, 0.41826, 0.41837, 0.41847, 0.41858, 0.41869, 0.41879, 0.4189, 0.41901, 0.41912, 0.41922, 0.41933, 0.41944, 0.41954, 0.41965, 0.41976, 0.41986, 0.41997, 0.42007, 0.42017, 0.42028, 0.42038, 0.42048, 0.42059, 0.42069, 0.42079, 0.4209, 0.421, 0.4211, 0.42121, 0.42131, 0.42142, 0.42152, 0.42163, 0.42173, 0.42183, 0.42194, 0.42204, 0.42215, 0.42225, 0.42236, 0.42247, 0.42257, 0.42268, 0.42279, 0.4229, 0.42301, 0.42312, 0.42323, 0.42334, 0.42345, 0.42357, 0.42368, 0.42379, 0.42391, 0.42402, 0.42414, 0.42425, 0.42437, 0.42448, 0.4246, 0.42471, 0.42483, 0.42495, 0.42506, 0.42518, 0.42529, 0.42541, 0.42553, 0.42564, 0.42576, 0.42587, 0.42599, 0.4261, 0.42622, 0.42633, 0.42645, 0.42656, 0.42667, 0.42679, 0.4269, 0.42701, 0.42712, 0.42724, 0.42735, 0.42746, 0.42757, 0.42769, 0.4278, 0.42792, 0.42803, 0.42814, 0.42826, 0.42837, 0.42849, 0.4286, 0.42871, 0.42883, 0.42894, 0.42905, 0.42916, 0.42927, 0.42938, 0.42949, 0.4296, 0.42971, 0.42982, 0.42992, 0.43003, 0.43014, 0.43025, 0.43036, 0.43047, 0.43057, 0.43068, 0.43078, 0.43089, 0.431, 0.4311, 0.43121, 0.43131, 0.43142, 0.43153, 0.43163, 0.43174, 0.43185, 0.43195, 0.43206, 0.43217, 0.43227, 0.43238, 0.43249, 0.4326, 0.4327, 0.43281, 0.43292, 0.43303, 0.43314, 0.43325, 0.43336, 0.43346, 0.43357, 0.43368, 0.43379, 0.4339, 0.434, 0.43411, 0.43421, 0.43432, 0.43442, 0.43453, 0.43463, 0.43473, 0.43484, 0.43494, 0.43504, 0.43514, 0.43525, 0.43535, 0.43546, 0.43556, 0.43567, 0.43577, 0.43588, 0.43599, 0.43609, 0.4362, 0.43631, 0.43641, 0.43652, 0.43663, 0.43673, 0.43684, 0.43694, 0.43705, 0.43715, 0.43725, 0.43735, 0.43745, 0.43755, 0.43765, 0.43775, 0.43785, 0.43795, 0.43805, 0.43815, 0.43825, 0.43836, 0.43846, 0.43856, 0.43867, 0.43877, 0.43887, 0.43898, 0.43908, 0.43919, 0.43929, 0.4394, 0.4395, 0.4396, 0.43971, 0.43982, 0.43992, 0.44003, 0.44014, 0.44024, 0.44035, 0.44046, 0.44056, 0.44067, 0.44077, 0.44088, 0.44098, 0.44109, 0.44119, 0.4413, 0.4414, 0.4415, 0.44161, 0.44171, 0.44181, 0.44191, 0.44202, 0.44212, 0.44222, 0.44232, 0.44243, 0.44253, 0.44263, 0.44273, 0.44284, 0.44294, 0.44304, 0.44315, 0.44325, 0.44336, 0.44347, 0.44357, 0.44368, 0.44379, 0.4439, 0.444, 0.44411, 0.44421, 0.44432, 0.44442, 0.44452, 0.44462, 0.44472, 0.44482, 0.44492, 0.44502, 0.44511, 0.44521, 0.4453, 0.4454, 0.44549, 0.44558, 0.44568, 0.44577, 0.44586, 0.44596, 0.44605, 0.44615, 0.44624, 0.44634, 0.44643, 0.44653, 0.44662, 0.44671, 0.44681, 0.4469, 0.44699, 0.44708, 0.44717, 0.44726, 0.44734, 0.44743, 0.44752, 0.4476, 0.44769, 0.44777, 0.44786, 0.44794, 0.44803, 0.44811, 0.4482, 0.44828, 0.44836, 0.44845, 0.44853, 0.44861, 0.4487, 0.44878, 0.44886, 0.44895, 0.44903, 0.44911, 0.44919, 0.44928, 0.44936, 0.44944, 0.44952, 0.44961, 0.44969, 0.44977, 0.44986, 0.44994, 0.45002, 0.4501, 0.45018, 0.45026, 0.45034, 0.45042, 0.4505, 0.45058, 0.45066, 0.45074, 0.45082, 0.4509, 0.45098, 0.45105, 0.45113, 0.45121, 0.45129, 0.45136, 0.45144, 0.45152, 0.45159, 0.45167, 0.45174, 0.45182, 0.45189, 0.45197, 0.45205, 0.45212, 0.4522, 0.45228, 0.45236, 0.45243, 0.45251, 0.45259, 0.45266, 0.45274, 0.45281, 0.45289, 0.45296, 0.45303, 0.45311, 0.45318, 0.45325, 0.45332, 0.4534, 0.45347, 0.45354, 0.45362, 0.45369, 0.45376, 0.45383, 0.4539, 0.45396, 0.45403, 0.4541, 0.45417, 0.45423, 0.4543, 0.45437, 0.45443, 0.4545, 0.45456, 0.45463, 0.4547, 0.45477, 0.45483, 0.4549, 0.45497, 0.45504, 0.4551, 0.45517, 0.45524, 0.45531, 0.45538, 0.45544, 0.45551, 0.45558, 0.45565, 0.45572, 0.45578, 0.45585, 0.45592, 0.45599, 0.45606, 0.45613, 0.4562, 0.45627, 0.45634, 0.45641, 0.45648, 0.45655, 0.45663, 0.45671, 0.45679, 0.45687, 0.45696, 0.45704, 0.45714, 0.45723, 0.45732, 0.45742, 0.45752, 0.45763, 0.45773, 0.45784, 0.45795, 0.45806, 0.45818, 0.4583, 0.45843, 0.45856, 0.45869, 0.45883, 0.45896, 0.45911, 0.45925, 0.45939, 0.45953, 0.45967, 0.45981, 0.45995, 0.46009, 0.46022, 0.46035, 0.46047, 0.46059, 0.4607, 0.4608, 0.4609, 0.46098, 0.46106, 0.46112, 0.46118, 0.46122, 0.46125, 0.46127, 0.46128, 0.46127, 0.46126, 0.46123, 0.46119, 0.46115, 0.46109, 0.46103, 0.46095, 0.46087, 0.46078, 0.46068, 0.46058, 0.46048, 0.46037, 0.46026, 0.46015, 0.46005, 0.45994, 0.45983, 0.45972, 0.45961, 0.4595, 0.45939, 0.45928, 0.45916, 0.45905, 0.45892, 0.45879, 0.45866, 0.45851, 0.45836, 0.45819, 0.45801, 0.45781, 0.45761, 0.45738, 0.45715, 0.4569, 0.45664, 0.45636, 0.45608, 0.45579, 0.4555, 0.4552, 0.4549, 0.4546, 0.45431, 0.45401, 0.45372, 0.45344, 0.45316, 0.4529, 0.45264, 0.45239, 0.45215, 0.45192, 0.45171, 0.45149, 0.45129, 0.45109, 0.45091, 0.45072, 0.45054, 0.45037, 0.45019, 0.45002, 0.44985, 0.44968, 0.44951, 0.44933, 0.44915, 0.44897, 0.44879, 0.44859, 0.44839, 0.44818, 0.44796, 0.44773, 0.44749, 0.44724, 0.44698, 0.4467, 0.44642, 0.44612, 0.44582, 0.44552, 0.44521, 0.4449, 0.4446, 0.44431, 0.44404, 0.44379, 0.44356, 0.44336, 0.4432, 0.44307, 0.44299, 0.44295, 0.44296, 0.44301, 0.44312, 0.44327, 0.44347, 0.44371, 0.44398, 0.4443, 0.44464, 0.44501, 0.4454, 0.4458, 0.44621, 0.44663, 0.44705, 0.44746, 0.44787, 0.44826, 0.44864, 0.44901, 0.44936, 0.44969, 0.45, 0.4503, 0.45058, 0.45085, 0.4511, 0.45134, 0.45157, 0.45179, 0.452, 0.4522, 0.4524, 0.45258, 0.45277, 0.45294, 0.45312, 0.45328, 0.45345, 0.4536, 0.45376, 0.45391, 0.45406, 0.4542, 0.45434, 0.45448, 0.45461, 0.45475, 0.45488, 0.45501, 0.45513, 0.45526, 0.45538, 0.4555, 0.45563, 0.45575, 0.45587, 0.45599, 0.45611, 0.45623, 0.45635, 0.45647, 0.45659, 0.4567, 0.45682, 0.45693, 0.45705, 0.45716, 0.45727, 0.45738, 0.45749, 0.4576, 0.4577, 0.45781, 0.45792, 0.45802, 0.45812, 0.45822, 0.45832, 0.45842, 0.45852, 0.45861, 0.45871, 0.4588, 0.4589, 0.45899, 0.45909, 0.45918, 0.45927, 0.45937, 0.45947, 0.45956, 0.45966, 0.45976, 0.45985, 0.45995, 0.46005, 0.46015, 0.46025, 0.46035, 0.46045, 0.46055, 0.46066, 0.46076, 0.46087, 0.46097, 0.46108, 0.46119, 0.4613, 0.46141, 0.46152, 0.46163, 0.46174, 0.46186, 0.46197, 0.46209, 0.4622, 0.46231, 0.46243, 0.46254, 0.46266, 0.46277, 0.46289, 0.463, 0.46312, 0.46323, 0.46335, 0.46347, 0.46358, 0.46369, 0.46381, 0.46392, 0.46403, 0.46414, 0.46426, 0.46437, 0.46448, 0.46459, 0.4647, 0.46481, 0.46492, 0.46503, 0.46514, 0.46525, 0.46536, 0.46546, 0.46557, 0.46567, 0.46578, 0.46588, 0.46599, 0.46609, 0.46619, 0.4663, 0.4664, 0.4665, 0.46661, 0.46671, 0.46682, 0.46693, 0.46703, 0.46714, 0.46725, 0.46736, 0.46747, 0.46757, 0.46768, 0.46779, 0.4679, 0.46801, 0.46813, 0.46824, 0.46835, 0.46846, 0.46856, 0.46867, 0.46878, 0.46889, 0.46899, 0.4691, 0.4692, 0.46931, 0.46942, 0.46952, 0.46962, 0.46973, 0.46983, 0.46993, 0.47004, 0.47014, 0.47024, 0.47034, 0.47044, 0.47054, 0.47064, 0.47074, 0.47084, 0.47094, 0.47104, 0.47113, 0.47123, 0.47133, 0.47143, 0.47153, 0.47163, 0.47172, 0.47182, 0.47192, 0.47202, 0.47211, 0.47221, 0.4723, 0.47239, 0.47248, 0.47258, 0.47267, 0.47276, 0.47286, 0.47295, 0.47304, 0.47313, 0.47322, 0.47331, 0.4734, 0.47349, 0.47358, 0.47367, 0.47376, 0.47384, 0.47393, 0.47402, 0.4741, 0.47419, 0.47427, 0.47435, 0.47443, 0.47451, 0.47459, 0.47467, 0.47475, 0.47483, 0.47491, 0.47499, 0.47507, 0.47515, 0.47523, 0.47531, 0.47539, 0.47547, 0.47554, 0.47562, 0.4757, 0.47578, 0.47585, 0.47593, 0.47601, 0.47608, 0.47616, 0.47624, 0.47631, 0.47639, 0.47646, 0.47654, 0.47661, 0.47669, 0.47676, 0.47683, 0.4769, 0.47697, 0.47704, 0.47711, 0.47718, 0.47725, 0.47732, 0.47739, 0.47746, 0.47753, 0.4776, 0.47766, 0.47773, 0.4778, 0.47786, 0.47793, 0.47799, 0.47806, 0.47812, 0.47819, 0.47826, 0.47833, 0.47839, 0.47846, 0.47853, 0.4786, 0.47867, 0.47874, 0.4788, 0.47887, 0.47894, 0.47901, 0.47907, 0.47914, 0.47921, 0.47928, 0.47935, 0.47942, 0.47949, 0.47956, 0.47963, 0.4797, 0.47976, 0.47983, 0.4799, 0.47997, 0.48003, 0.4801, 0.48017, 0.48023, 0.4803, 0.48037, 0.48043, 0.4805, 0.48057, 0.48064, 0.4807, 0.48077, 0.48084, 0.4809, 0.48097, 0.48103, 0.4811, 0.48116, 0.48123, 0.48129, 0.48136, 0.48142, 0.48149, 0.48155, 0.48162, 0.48168, 0.48174, 0.4818, 0.48187, 0.48193, 0.48199, 0.48205, 0.48212, 0.48218, 0.48224, 0.48231, 0.48237, 0.48244, 0.4825, 0.48256, 0.48262, 0.48268, 0.48275, 0.48281, 0.48287, 0.48294, 0.483, 0.48306, 0.48313, 0.48319, 0.48325, 0.48331, 0.48336, 0.48342, 0.48347, 0.48353, 0.48359, 0.48364, 0.4837, 0.48375, 0.48381, 0.48387, 0.48392, 0.48398, 0.48403, 0.48409, 0.48414, 0.4842, 0.48425, 0.48431, 0.48436, 0.48442, 0.48448, 0.48453, 0.48459, 0.48465, 0.4847, 0.48476, 0.48482, 0.48487, 0.48493, 0.48498, 0.48504, 0.4851, 0.48515, 0.48521, 0.48527, 0.48533, 0.48539, 0.48544, 0.4855, 0.48555, 0.4856, 0.48566, 0.48571, 0.48576, 0.48581, 0.48586, 0.48591, 0.48596, 0.48601, 0.48607, 0.48612, 0.48617, 0.48622, 0.48627, 0.48632, 0.48637, 0.48643, 0.48648, 0.48653, 0.48658, 0.48663, 0.48668, 0.48673, 0.48678, 0.48683, 0.48688, 0.48693, 0.48699, 0.48704, 0.48709, 0.48714, 0.48719, 0.48724, 0.48729, 0.48734, 0.48739, 0.48744, 0.48749, 0.48754, 0.48758, 0.48763, 0.48768, 0.48773, 0.48778, 0.48783, 0.48788, 0.48793, 0.48798, 0.48803, 0.48808, 0.48813, 0.48818, 0.48822, 0.48827, 0.48832, 0.48836, 0.48841, 0.48845, 0.4885, 0.48854, 0.48859, 0.48863, 0.48867, 0.48871, 0.48876, 0.4888, 0.48884, 0.48888, 0.48892, 0.48896, 0.489, 0.48904, 0.48909, 0.48913, 0.48917, 0.48921, 0.48925, 0.48929, 0.48934, 0.48938, 0.48942, 0.48947, 0.48951, 0.48956, 0.48961, 0.48965, 0.4897, 0.48975, 0.4898, 0.48985, 0.48989, 0.48994, 0.48999, 0.49004, 0.49008, 0.49013, 0.49018, 0.49022, 0.49027, 0.49031, 0.49036, 0.4904, 0.49044, 0.49048, 0.49052, 0.49056, 0.49059, 0.49063, 0.49066, 0.49069, 0.49072, 0.49075, 0.49077, 0.4908, 0.49083, 0.49085, 0.49088, 0.4909, 0.49093, 0.49095, 0.49097, 0.491, 0.49102, 0.49105, 0.49107, 0.4911, 0.49112, 0.49115, 0.49118, 0.49121, 0.49123, 0.49126, 0.49129, 0.49132, 0.49135, 0.49138, 0.49141, 0.49144, 0.49148, 0.49151, 0.49154, 0.49158, 0.49161, 0.49164, 0.49168, 0.49171, 0.49175, 0.49178, 0.49182, 0.49186, 0.4919, 0.49193, 0.49197, 0.49201, 0.49205, 0.49209, 0.49213, 0.49217, 0.49221, 0.49224, 0.49228, 0.49232, 0.49235, 0.49238, 0.49242, 0.49245, 0.49248, 0.49251, 0.49254, 0.49256, 0.49259, 0.49262, 0.49264, 0.49267, 0.49269, 0.49271, 0.49274, 0.49276, 0.49278, 0.4928, 0.49282, 0.49284, 0.49285, 0.49287, 0.49289, 0.49291, 0.49293, 0.49294, 0.49296, 0.49297, 0.49299, 0.493, 0.49301, 0.49303, 0.49304, 0.49305, 0.49306, 0.49307, 0.49307, 0.49308, 0.49308, 0.49309, 0.49309, 0.49309, 0.4931, 0.4931, 0.4931, 0.4931, 0.49311, 0.49311, 0.49311, 0.49311, 0.49311, 0.4931, 0.4931, 0.4931, 0.49309, 0.49309, 0.49308, 0.49308, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49307, 0.49308, 0.49308, 0.49309, 0.4931, 0.49311, 0.49312, 0.49313, 0.49314, 0.49315, 0.49317, 0.49318, 0.49319, 0.4932, 0.49321, 0.49321, 0.49322, 0.49322, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49324, 0.49323, 0.49323, 0.49323, 0.49323, 0.49323, 0.49322, 0.49322, 0.49321, 0.4932, 0.49319, 0.49319, 0.49318, 0.49317, 0.49316, 0.49315, 0.49315, 0.49314, 0.49313, 0.49313, 0.49312, 0.49311, 0.4931, 0.4931, 0.49309, 0.49308, 0.49308, 0.49307, 0.49307, 0.49306, 0.49306, 0.49306, 0.49306, 0.49306, 0.49306, 0.49306, 0.49307, 0.49307, 0.49307, 0.49307, 0.49308, 0.49308, 0.49309, 0.49309, 0.4931, 0.4931, 0.49311, 0.49312, 0.49313, 0.49314, 0.49315, 0.49316, 0.49316, 0.49317, 0.49318, 0.49319, 0.4932, 0.49321, 0.49322, 0.49323, 0.49324, 0.49325, 0.49326, 0.49327, 0.49328, 0.49329, 0.4933, 0.49331, 0.49332, 0.49333, 0.49334, 0.49335, 0.49336, 0.49337, 0.49339, 0.4934, 0.49341, 0.49343, 0.49344, 0.49346, 0.49347, 0.49348, 0.49349, 0.49351, 0.49352, 0.49354, 0.49355, 0.49357, 0.49358, 0.4936, 0.49362, 0.49364, 0.49366, 0.49368, 0.4937, 0.49373, 0.49375, 0.49378, 0.49381, 0.49384, 0.49387, 0.49391, 0.49394, 0.49398, 0.49402, 0.49406, 0.4941, 0.49415, 0.49419, 0.49424, 0.49429, 0.49433, 0.49438, 0.49443, 0.49447, 0.49452, 0.49456, 0.49461, 0.49465, 0.4947, 0.49475, 0.4948, 0.49484, 0.49489, 0.49494, 0.49499, 0.49505, 0.4951, 0.49515, 0.49521, 0.49527, 0.49533, 0.49539, 0.49546, 0.49553, 0.49561, 0.49568, 0.49576, 0.49585, 0.49593, 0.49602, 0.49611, 0.4962, 0.49629, 0.49638, 0.49647, 0.49655, 0.49664, 0.49673, 0.49681, 0.49689, 0.49696, 0.49703, 0.4971, 0.49717, 0.49723, 0.49729, 0.49735, 0.4974, 0.49746, 0.49752, 0.49758, 0.49764, 0.49769, 0.49775, 0.49782, 0.49788, 0.49795, 0.49802, 0.49809, 0.49817, 0.49825, 0.49833, 0.49841, 0.4985, 0.4986, 0.49869, 0.49879, 0.49888, 0.49898, 0.49907, 0.49916, 0.49923, 0.49931, 0.49936, 0.49941, 0.49945, 0.49947, 0.49947, 0.49947, 0.49945, 0.49943, 0.49939, 0.49935, 0.4993, 0.49925, 0.49919, 0.49914, 0.49908, 0.49903, 0.49899, 0.49895, 0.49892, 0.49888, 0.49886, 0.49883, 0.4988, 0.49878, 0.49875, 0.49872, 0.49869, 0.49866, 0.49862, 0.49859, 0.49855, 0.4985, 0.49846, 0.49841, 0.49836, 0.4983, 0.49825, 0.49818, 0.49812, 0.49805, 0.49798, 0.4979, 0.49782, 0.49773, 0.49764, 0.49754, 0.49745, 0.49735, 0.49726, 0.49717, 0.49708, 0.49701, 0.49694, 0.49689, 0.49685, 0.49683, 0.49681, 0.49681, 0.49682, 0.49684, 0.49686, 0.49687, 0.49689, 0.49689, 0.49687, 0.49683, 0.49677, 0.49666, 0.49653, 0.49635, 0.49612, 0.49585, 0.49553, 0.49517, 0.49477, 0.49432, 0.49384, 0.49333, 0.49279, 0.49223, 0.49166, 0.49106, 0.49046, 0.48986, 0.48924, 0.48863, 0.48802, 0.48741, 0.4868, 0.48619, 0.48559, 0.48498, 0.48438, 0.48377, 0.48315, 0.48252, 0.48189, 0.48124, 0.48058, 0.47991, 0.47921, 0.47849, 0.47775, 0.47699, 0.4762, 0.47538, 0.47455, 0.47368, 0.4728, 0.4719, 0.47097, 0.47003, 0.46908, 0.4681, 0.46712, 0.46612, 0.46512, 0.4641, 0.46308, 0.46204, 0.46101, 0.45996, 0.45891, 0.45785, 0.45679, 0.45572, 0.45465, 0.45357, 0.45249, 0.4514, 0.45031, 0.44921, 0.44812, 0.44703, 0.44594, 0.44486, 0.44379, 0.44273, 0.44169, 0.44068, 0.43969, 0.43873, 0.43779, 0.4369, 0.43603, 0.43521, 0.43442, 0.43367, 0.43296, 0.43229, 0.43166, 0.43107, 0.43052, 0.43001, 0.42953, 0.4291, 0.4287, 0.42833, 0.428, 0.4277, 0.42743, 0.42718, 0.42696, 0.42676, 0.42658, 0.42642, 0.42628, 0.42615, 0.42603, 0.42592, 0.42583, 0.42575, 0.42568, 0.42562, 0.42557, 0.42553, 0.4255, 0.42548, 0.42547, 0.42547, 0.42548, 0.4255, 0.42553, 0.42557, 0.42562, 0.42567, 0.42574, 0.42582, 0.42591, 0.42601, 0.42611, 0.42622, 0.42634, 0.42647, 0.42661, 0.42675, 0.42689, 0.42704, 0.4272, 0.42736, 0.42753, 0.42769, 0.42786, 0.42804, 0.42821, 0.42839, 0.42857, 0.42875, 0.42893, 0.42911, 0.4293, 0.42949, 0.42968, 0.42987, 0.43007, 0.43027, 0.43047, 0.43067, 0.43088, 0.43109, 0.43131, 0.43153, 0.43175, 0.43197, 0.4322, 0.43243, 0.43267, 0.4329, 0.43314, 0.43338, 0.43362, 0.43386, 0.43411, 0.43436, 0.4346, 0.43485, 0.4351, 0.43535, 0.43561, 0.43586, 0.43611, 0.43636, 0.43662, 0.43687, 0.43712, 0.43737, 0.43762, 0.43788, 0.43813, 0.43838, 0.43863, 0.43888, 0.43913, 0.43938, 0.43963, 0.43988, 0.44013, 0.44038, 0.44063, 0.44088, 0.44113, 0.44138, 0.44163, 0.44188, 0.44214, 0.44239, 0.44264, 0.44289, 0.44315, 0.4434, 0.44365, 0.4439, 0.44416, 0.44441, 0.44466, 0.44492, 0.44517, 0.44542, 0.44568, 0.44593, 0.44618, 0.44644, 0.44669, 0.44694, 0.44719, 0.44744, 0.44769, 0.44795, 0.4482, 0.44845, 0.44871, 0.44896, 0.44922, 0.44947, 0.44973, 0.44998, 0.45024, 0.45049, 0.45074, 0.45099, 0.45124, 0.45149, 0.45174, 0.45199, 0.45224, 0.45248, 0.45273, 0.45297, 0.45322, 0.45346, 0.4537, 0.45394, 0.45418, 0.45442, 0.45466, 0.4549, 0.45514, 0.45537, 0.4556, 0.45583, 0.45606, 0.45629, 0.45651, 0.45674, 0.45696, 0.45718, 0.4574, 0.45762, 0.45784, 0.45806, 0.45827, 0.45849, 0.4587, 0.45891, 0.45912, 0.45933, 0.45954, 0.45974, 0.45994, 0.46014, 0.46034, 0.46053, 0.46073, 0.46092, 0.4611, 0.46129, 0.46147, 0.46165, 0.46183, 0.462, 0.46218, 0.46235, 0.46252, 0.46269, 0.46285, 0.46302, 0.46318, 0.46334, 0.46351, 0.46367, 0.46382, 0.46398, 0.46414, 0.46429, 0.46444, 0.46459, 0.46474, 0.46488, 0.46503, 0.46517, 0.46531, 0.46544, 0.46558, 0.46571, 0.46584, 0.46596, 0.46609, 0.46621, 0.46633, 0.46645, 0.46657, 0.46669, 0.46681, 0.46692, 0.46703, 0.46715, 0.46726, 0.46736, 0.46747, 0.46757, 0.46767, 0.46776, 0.46786, 0.46795, 0.46804, 0.46812, 0.46821, 0.46829, 0.46837, 0.46845, 0.46853, 0.4686, 0.46868, 0.46876, 0.46883, 0.46891, 0.46898, 0.46905, 0.46913, 0.46919, 0.46926, 0.46933, 0.46939, 0.46946, 0.46952, 0.46958, 0.46964, 0.46971, 0.46977, 0.46983, 0.46989, 0.46995, 0.47001, 0.47007, 0.47013, 0.47019, 0.47025, 0.47031, 0.47037, 0.47043, 0.47049, 0.47054, 0.4706, 0.47065, 0.47071, 0.47076, 0.47082, 0.47088, 0.47094, 0.471, 0.47106, 0.47112, 0.47118, 0.47125, 0.47131, 0.47137, 0.47143, 0.47149, 0.47155, 0.47161, 0.47167, 0.47173, 0.47179, 0.47185, 0.47191, 0.47197, 0.47204, 0.4721, 0.47216, 0.47222, 0.47229, 0.47235, 0.47241, 0.47247, 0.47253, 0.47259, 0.47264, 0.4727, 0.47275, 0.47281, 0.47286, 0.47291, 0.47296, 0.47302, 0.47307, 0.47312, 0.47317, 0.47322, 0.47327, 0.47332, 0.47337, 0.47341, 0.47346, 0.4735, 0.47354, 0.47359, 0.47363, 0.47367, 0.47371, 0.47374, 0.47378, 0.47381, 0.47384, 0.47387, 0.47389, 0.47392, 0.47395, 0.47397, 0.47399, 0.47402, 0.47404, 0.47406, 0.47408, 0.4741, 0.47412, 0.47414, 0.47416, 0.47418, 0.4742, 0.47421, 0.47423, 0.47424, 0.47425, 0.47426, 0.47427, 0.47427, 0.47428, 0.47428, 0.47428, 0.47428, 0.47428, 0.47428, 0.47428, 0.47427, 0.47427, 0.47426, 0.47425, 0.47424, 0.47423, 0.47422, 0.4742, 0.47419, 0.47417, 0.47415, 0.47413, 0.47411, 0.47409, 0.47407, 0.47404, 0.47402, 0.47399, 0.47396, 0.47393, 0.4739, 0.47387, 0.47384, 0.47381, 0.47378, 0.47375, 0.47372, 0.4737, 0.47368, 0.47366, 0.47364, 0.47363, 0.47362, 0.47361, 0.47361, 0.47361, 0.47361, 0.47361, 0.47361, 0.47362, 0.47362, 0.47363, 0.47364, 0.47365, 0.47366, 0.47367, 0.47368, 0.4737, 0.47371, 0.47372, 0.47373, 0.47373, 0.47374, 0.47374, 0.47374, 0.47374, 0.47374, 0.47374, 0.47373, 0.47372, 0.47371, 0.47369, 0.47367, 0.47365, 0.47363, 0.4736, 0.47357, 0.47353, 0.47349, 0.47345, 0.47339, 0.47334, 0.47327, 0.4732, 0.47312, 0.47303, 0.47294, 0.47284, 0.47273, 0.47261, 0.47249, 0.47236, 0.47222, 0.47207, 0.47191, 0.47174, 0.47157, 0.47138, 0.47119, 0.47098, 0.47077, 0.47055, 0.47032, 0.47009, 0.46984, 0.46959, 0.46933, 0.46906, 0.46879, 0.46851, 0.46823, 0.46794, 0.46765, 0.46735, 0.46705, 0.46675, 0.46645, 0.46615, 0.46584, 0.46553, 0.46523, 0.46492, 0.46462, 0.46431, 0.46402, 0.46372, 0.46343, 0.46315, 0.46287, 0.4626, 0.46233, 0.46207, 0.46182, 0.46158, 0.46134, 0.46111, 0.46089, 0.46067, 0.46047, 0.46028, 0.46009, 0.45992, 0.45975, 0.45959, 0.45944, 0.4593, 0.45917, 0.45904, 0.45892, 0.4588, 0.45869, 0.45859, 0.45849, 0.45839, 0.4583, 0.45821, 0.45812, 0.45804, 0.45796, 0.45788, 0.4578, 0.45772, 0.45764, 0.45755, 0.45747, 0.45739, 0.4573, 0.45721, 0.45711, 0.45701, 0.4569, 0.45679, 0.45667, 0.45654, 0.4564, 0.45625, 0.4561, 0.45593, 0.45575, 0.45556, 0.45536, 0.45515, 0.45492, 0.45469, 0.45444, 0.45418, 0.45392, 0.45364, 0.45336, 0.45307, 0.45277, 0.45246, 0.45215, 0.45183, 0.45151, 0.45119, 0.45085, 0.45052, 0.45018, 0.44983, 0.44948, 0.44912, 0.44875, 0.44838, 0.44801, 0.44762, 0.44723, 0.44683, 0.44642, 0.446, 0.44555, 0.4451, 0.44462, 0.44413, 0.44361, 0.44308, 0.44253, 0.44195, 0.44137, 0.44077, 0.44016, 0.43955, 0.43895, 0.43836, 0.43778, 0.43724, 0.43674, 0.4363, 0.43591, 0.4356, 0.43537, 0.43523, 0.43519, 0.43525, 0.43542, 0.4357, 0.43609, 0.43657, 0.43716, 0.43784, 0.4386, 0.43944, 0.44034, 0.44129, 0.44227, 0.44328, 0.44431, 0.44534, 0.44636, 0.44736, 0.44833, 0.44928, 0.45018, 0.45104, 0.45186, 0.45263, 0.45334, 0.45401, 0.45463, 0.4552, 0.45572, 0.4562, 0.45664, 0.45703, 0.45739, 0.45772, 0.45801, 0.45827, 0.4585, 0.4587, 0.45888, 0.45904, 0.45917, 0.45928, 0.45937, 0.45944, 0.45949, 0.45952, 0.45953, 0.45952, 0.4595, 0.45947, 0.45941, 0.45935, 0.45928, 0.45919, 0.45909, 0.45898, 0.45887, 0.45875, 0.45863, 0.4585, 0.45838, 0.45825, 0.45813, 0.45801, 0.4579, 0.45779, 0.45768, 0.45759, 0.4575, 0.45742, 0.45735, 0.45728, 0.45722, 0.45716, 0.45711, 0.45706, 0.45702, 0.45697, 0.45693, 0.45688, 0.45684, 0.4568, 0.45675, 0.4567, 0.45665, 0.4566, 0.45655, 0.45649, 0.45644, 0.45638, 0.45632, 0.45626, 0.4562, 0.45614, 0.45608, 0.45602, 0.45596, 0.45589, 0.45583, 0.45576, 0.45569, 0.45562, 0.45554, 0.45546, 0.45538, 0.4553, 0.45522, 0.45513, 0.45504, 0.45494, 0.45484, 0.45475, 0.45464, 0.45454, 0.45443, 0.45432, 0.45421, 0.45409, 0.45397, 0.45385, 0.45372, 0.45359, 0.45345, 0.45331, 0.45316, 0.453, 0.45284, 0.45268, 0.45251, 0.45233, 0.45215, 0.45197, 0.45178, 0.45159, 0.45139, 0.45119, 0.45098, 0.45078, 0.45056, 0.45035, 0.45013, 0.44991, 0.44969, 0.44947, 0.44925, 0.44902, 0.4488, 0.44857, 0.44834, 0.44812, 0.44789, 0.44767, 0.44744, 0.44722, 0.447, 0.44678, 0.44656, 0.44634, 0.44612, 0.4459, 0.44568, 0.44547, 0.44525, 0.44503, 0.44481, 0.44459, 0.44437, 0.44414, 0.44391, 0.44369, 0.44346, 0.44323, 0.443, 0.44277, 0.44254, 0.44231, 0.44209, 0.44186, 0.44165, 0.44143, 0.44122, 0.44101, 0.4408, 0.44059, 0.44039, 0.44019, 0.43999, 0.43979, 0.43958, 0.43938, 0.43918, 0.43897, 0.43877, 0.43856, 0.43835, 0.43815, 0.43795, 0.43774, 0.43755, 0.43735, 0.43715, 0.43696, 0.43677, 0.43659, 0.4364, 0.43623, 0.43606, 0.43589, 0.43573, 0.43558, 0.43544, 0.4353, 0.43517, 0.43505, 0.43493, 0.43482, 0.43471, 0.43461, 0.43451, 0.43442, 0.43433, 0.43424, 0.43415, 0.43407, 0.43398, 0.43389, 0.4338, 0.43371, 0.43362, 0.43354, 0.43345, 0.43336, 0.43327, 0.43319, 0.4331, 0.43301, 0.43292, 0.43284, 0.43275, 0.43267, 0.43259, 0.43251, 0.43243, 0.43235, 0.43228, 0.43221, 0.43214, 0.43207, 0.432, 0.43193, 0.43186, 0.43178, 0.43171, 0.43164, 0.43156, 0.43147, 0.43138, 0.43129, 0.43119, 0.43108, 0.43097, 0.43085, 0.43072, 0.43059, 0.43045, 0.4303, 0.43015, 0.42999, 0.42983, 0.42966, 0.42948, 0.4293, 0.42911, 0.42891, 0.42871, 0.42851, 0.42831, 0.4281, 0.42789, 0.42769, 0.42748, 0.42727, 0.42707, 0.42687, 0.42668, 0.42649, 0.4263, 0.42612, 0.42595, 0.42578, 0.42562, 0.42547, 0.42533, 0.42519, 0.42507, 0.42495, 0.42485, 0.42475, 0.42466, 0.42458, 0.42451, 0.42444, 0.42438, 0.42433, 0.42427, 0.42422, 0.42418, 0.42413, 0.42409, 0.42404, 0.42399, 0.42395, 0.4239, 0.42384, 0.42379, 0.42372, 0.42365, 0.42358, 0.42349, 0.4234, 0.4233, 0.42319, 0.42307, 0.42294, 0.4228, 0.42265, 0.42249, 0.42233, 0.42216, 0.42197, 0.42179, 0.42159, 0.4214, 0.42119, 0.42098, 0.42077, 0.42055, 0.42033, 0.4201, 0.41987, 0.41963, 0.4194, 0.41916, 0.41892, 0.41868, 0.41845, 0.41821, 0.41799, 0.41776, 0.41754, 0.41733, 0.41713, 0.41694, 0.41676, 0.41659, 0.41643, 0.41628, 0.41615, 0.41602, 0.41591, 0.4158, 0.4157, 0.41561, 0.41553, 0.41546, 0.41539, 0.41532, 0.41526, 0.41521, 0.41515, 0.4151, 0.41505, 0.41499, 0.41494, 0.41489, 0.41484, 0.41479, 0.41474, 0.4147, 0.41465, 0.41461, 0.41457, 0.41453, 0.41449, 0.41445, 0.4144, 0.41435, 0.4143, 0.41423, 0.41416, 0.41409, 0.41401, 0.41392, 0.41382, 0.41372, 0.41362, 0.41351, 0.4134, 0.41328, 0.41316, 0.41303, 0.41289, 0.41275, 0.4126, 0.41245, 0.4123, 0.41214, 0.41198, 0.41182, 0.41165, 0.41148, 0.41131, 0.41114, 0.41097, 0.41079, 0.41061, 0.41043, 0.41024, 0.41005, 0.40986, 0.40966, 0.40945, 0.40925, 0.40904, 0.40882, 0.4086, 0.40838, 0.40815, 0.40793, 0.4077, 0.40746, 0.40723, 0.40699, 0.40675, 0.40651, 0.40627, 0.40602, 0.40577, 0.40552, 0.40527, 0.40501, 0.40475, 0.40449, 0.40423, 0.40396, 0.4037, 0.40343, 0.40316, 0.40289, 0.40263, 0.40236, 0.40209, 0.40182, 0.40154, 0.40127, 0.40099, 0.40072, 0.40044, 0.40016, 0.39988, 0.3996, 0.39932, 0.39904, 0.39876, 0.39849, 0.39821, 0.39794, 0.39768, 0.39741, 0.39715, 0.3969, 0.39665, 0.3964, 0.39616, 0.39593, 0.39569, 0.39547, 0.39525, 0.39504, 0.39483, 0.39462, 0.39441, 0.39421, 0.394, 0.39379, 0.39359, 0.39338, 0.39317, 0.39296, 0.39274, 0.39253, 0.39232, 0.39211, 0.3919, 0.3917, 0.39149, 0.39128, 0.39108, 0.39087, 0.39066, 0.39046, 0.39025, 0.39003, 0.38982, 0.38961, 0.38939, 0.38918, 0.38897, 0.38876, 0.38855, 0.38834, 0.38814, 0.38793, 0.38773, 0.38753, 0.38733, 0.38713, 0.38693, 0.38672, 0.38652, 0.38632, 0.38612, 0.38592, 0.38573, 0.38553, 0.38534, 0.38515, 0.38495, 0.38476, 0.38456, 0.38437, 0.38416, 0.38396, 0.38375, 0.38354, 0.38332, 0.3831, 0.38287, 0.38264, 0.38242, 0.38219, 0.38196, 0.38173, 0.38151, 0.38128, 0.38106, 0.38085, 0.38064, 0.38043, 0.38023, 0.38003, 0.37983, 0.37964, 0.37945, 0.37925, 0.37907, 0.37888, 0.3787, 0.37852, 0.37834, 0.37817, 0.378, 0.37784, 0.37769, 0.37754, 0.3774, 0.37727, 0.37714, 0.37701, 0.37689, 0.37677, 0.37665, 0.37654, 0.37644, 0.37634, 0.37624, 0.37615, 0.37606, 0.37598, 0.3759, 0.37583, 0.37576, 0.3757, 0.37562])

	output_mode = 'statistic_minus_1_1'
	input_mode = 'minus_1_1'

	# TODO: Add undersampling option
	input_shape = getInputShape(x_in_train[0], v_to_h_ratio)
	x_train_spec = spectraToSpectrogram(x_in_train, input_mode, v_to_h_ratio, input_shape)
	x_val_spec = spectraToSpectrogram(x_in_val, input_mode, v_to_h_ratio, input_shape)
	x_test_spec = spectraToSpectrogram(x_in_test, input_mode, v_to_h_ratio, input_shape)

	# Normalize output properties at range [-1, 1]
	y_train = outputAtNormalRange(np.array(y_train), prop, output_mode)
	y_test = outputAtNormalRange(np.array(y_test), prop, output_mode)
	y_val = outputAtNormalRange(np.array(y_val), prop, output_mode)
	# Train_Min = [];
	# Train_Max = [];

	# Using Spectrogram
	# plt.pcolormesh(t2, x, np.log(np.abs(spec)))
	# plt.title('Spectrogtam Magnitude')
	# plt.ylabel('Frequency')
	# plt.xlabel('Wavelength')
	# plt.savefig('./Output/SignalSpectrogram')
	# plt.close()

	# Input Spectra
	# plt.plot(X_train[0])
	# plt.savefig('./Output/X_in')
	# plt.close()

	# output plot
	# plt.plot(Y_train)
	# plt.savefig('Y_train')
	# plt.close()
	# exit()

	print(x_train_spec.shape)
	print(x_train_spec[0])
	input_shape_1 = tuple([input_shape[0], input_shape[1], 1])
	
	# plt.imshow(X_train_spec[0])
	# plt.savefig('Spectrogram')
	# plt.close()
	
	# To try activations: (relu, elu, tanh, )
	activation_fun = 'relu'
	#create model
	model = Sequential()
	# model.add(Conv2D(64, kernel_size=3, input_shape=input_shape_1))
	model.add(Conv2D(64, kernel_size=3, padding='same', input_shape=input_shape_1))
	model.add(BatchNormalization())
	model.add(ReLU())
	# Layer 2
	model.add(MaxPooling2D(pool_size=(2, 2)))
	# Layer 3
	model.add(Conv2D(128, kernel_size=3, padding='same'))
	model.add(BatchNormalization())
	model.add(ReLU())
	# Layer 4
	model.add(Conv2D(256, kernel_size=3, padding='same'))
	model.add(BatchNormalization())
	model.add(ReLU())
	# model.add(Conv2D(32, kernel_size=3, padding='same'))
	# model.add(ReLU())
	# Layer 5	
	model.add(MaxPooling2D(pool_size=(2, 2)))
	# Layer 6
	model.add(Conv2D(512, kernel_size=3, padding='same'))
	model.add(BatchNormalization())
	model.add(ReLU())
	# Layer 7
	model.add(Conv2D(64, kernel_size=3, padding='same'))
	model.add(BatchNormalization())
	model.add(ReLU())
	# Layer 8
	model.add(Flatten(input_shape=model.output_shape[1:]))
	# model.add(Dense(80))
	model.add(Dense(100))
	# model.add(Dense(10))
	model.add(ReLU())
	# model.add(Dropout(0.25))
	# Layer 9
	model.add(Dense(1, activation='linear'))
	#compile model using accuracy to measure model performance
	model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mse'])
	print(model.summary())
	#train the model
	# tcb = TimingCallback()
	# model.fit(x_train_spec, y_train, validation_data=(x_val_spec, y_val), epochs=5, batch_size=20, callbacks=[tcb])
	history = model.fit(x_train_spec, y_train, validation_data=(x_val_spec, y_val), epochs=5, batch_size=10)
	print(history.history)
	plt.plot(history.history['loss'])
	plt.plot(history.history['val_loss'])
	plt.title('Global Model Loss')
	plt.ylabel('Loss')
	plt.xlabel('Epoch')
	plt.legend(['Train', 'Validation'], loc='upper right')
	plt.grid(linestyle=':')
	plt.savefig(fold_path+'/'+prop+'model-loss.eps',format='eps',dpi=1000,bbox_inches='tight')
	plt.close()
	# y_test_pred = []
	# for i in range(x_test_spec.shape[0]):
	# 	y_test_pred.append(model.predict(x_test_spec[i].reshape(1,51,83,1)).reshape(1).tolist())
	# y_test_pred = np.array(y_test_pred)

	y_train_pred = model.predict(x_train_spec)
	y_val_pred = model.predict(x_val_spec)
	y_test_pred = model.predict(x_test_spec)
	model.save(fold_path+'/'+prop+'model')
	y_test = np.array(y_test)

	# Return to initial prop
	y_train = outputFromNormalRange(y_train, prop, output_mode)
	y_test = outputFromNormalRange(y_test, prop, output_mode)
	y_val = outputFromNormalRange(y_val, prop, output_mode)
	y_train_pred = outputFromNormalRange(y_train_pred, prop, output_mode)
	y_val_pred = outputFromNormalRange(y_val_pred, prop, output_mode)
	y_test_pred = outputFromNormalRange(y_test_pred, prop, output_mode)

	y_train_pred = np.array(y_train_pred.reshape(y_train_pred.shape[0]).tolist())
	y_val_pred = np.array(y_val_pred.reshape(y_val_pred.shape[0]).tolist())
	y_test_pred = np.array(y_test_pred.reshape(y_test_pred.shape[0]).tolist())
	print('y_test')
	print(y_test)
	print('y_test_pred')
	print(y_test_pred)
	mse_test = ((y_test_pred - y_test)**2).mean()
	mse_train = ((y_train_pred - y_train)**2).mean()
	mse_val = ((y_val_pred - y_val)**2).mean()
	rmse_test, determ_test, rpiq_test = computeErrors(y_test, y_test_pred)
	print('rmse = '+str(rmse_test))
	print('determ = '+str(determ_test))
	print('rpiq = '+str(rpiq_test))
	rmse_train, determ_train, rpiq_train = computeErrors(y_train, y_train_pred)
	rmse_val, determ_val, rpiq_val = computeErrors(y_val, y_val_pred)
	metrics = pnd.DataFrame({'Set': ['Train', 'Val', 'Test'],
							 'MSE': [mse_train, mse_val, mse_test],
							 'RMSE': [rmse_train, rmse_val, rmse_test],
							 'determ': [determ_train, determ_val, determ_test],
							 'rpiq': [rpiq_train, rpiq_val, rpiq_test]})
	metrics.to_csv(fold_path+'/'+prop+'_metrics.csv')
	# batch_size
	# import pandas
	# pandas.dataframe
	a = pnd.DataFrame({'y_test': y_test, 'y_test_pred': y_test_pred})
	a.to_csv(fold_path+'/'+prop+'.csv')

	return rmse_train, rmse_val, rmse_test, determ_train, determ_val, determ_test, rpiq_train, rpiq_val, rpiq_test
	# oc, clay
	# savgol_filter feflectances

	# multi
